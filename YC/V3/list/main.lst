C51 COMPILER V9.52.0.0   MAIN                                                              07/02/2016 11:26:42 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\list\main.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE main.c LARGE OMF2 BROWSE DEBUG PRINT(.\list\main.lst) TABS(2) OBJECT(.\list
                    -\main.obj)

line level    source

   1          #include "typealias.h"
   2          #include "config.h"
   3          #include "uart.h"
   4          #include "task.h"
   5          #include "dwscreen.h"
   6          #include "alert.h"
   7          #include "adc.h"
   8          #include "process.h"
   9          #include "e2prom.h"
  10          #include <stdio.h>
  11          #include <stdlib.h>
  12          #include <string.h>
  13          // #include "extension.h"
  14          
  15          void Delay1000ms()    //@24.000MHz
  16          {
  17   1        unsigned char i, j, k;
  18   1      
  19   1        _nop_();
  20   1        _nop_();
  21   1        i = 92;
  22   1        j = 50;
  23   1        k = 238;
  24   1        do
  25   1        {
  26   2          do
  27   2          {
  28   3            while (--k);
  29   3          } while (--j);
  30   2        } while (--i);
  31   1      }
  32          
  33          void main(void)
  34          {
  35   1          init_io_alert();
  36   1          init_adc();
  37   1          valve_control_io_init();
  38   1          uart_init();
  39   1          system_tick_init();
  40   1          workflow_init();
  41   1          dw_init();
  42   1          alert_beep_disable(); 
  43   1          count_down_init_all_task();
  44   1          Extern0_Init();
  45   1          EA = 1;
  46   1          tem_around = temperature_around_cal();
  47   1          tem_fan = temperature_fan_cal();
  48   1          send_two_value_to_screen(ADDR_TEMPERATURE_AROUND, tem_around, tem_fan);
  49   1        password_init();
  50   1          param_init();
  51   1          Delay1000ms();
  52   1        dw_screen_init();
  53   1          Delay5ms();
  54   1          system_enter_idle();
C51 COMPILER V9.52.0.0   MAIN                                                              07/02/2016 11:26:42 PAGE 2   

  55   1          Timer0_Run();
  56   1          while (1)
  57   1        {
  58   2              
  59   2              reset_watch_dog();
  60   2              if (INT_PROC & DW_DUTY) {
  61   3                  printf("DW_DUTY, PoW\r\n");
  62   3      
  63   3              //    dw_read_data_from_screen();
  64   3                  INT_PROC &= ~DW_DUTY;
  65   3                  continue;
  66   3              }
  67   2              if (INT_PROC & WF_FINISH_DUTY) {
  68   3                  printf("WF_FINISH_DUTY, PoW\r\n");
  69   3                  wf_finish_duty_task();
  70   3                  INT_PROC &= ~WF_FINISH_DUTY;
  71   3                  continue;
  72   3              }
  73   2      
  74   2              if(INT_PROC & START_DUTY)
  75   2              {
  76   3                  printf("START\r\n");
  77   3                  // 2s内检测风机是否正常工作
  78   3                  // reload_fan_start_deceted();
  79   3                  syc_signal_start_fan(1);
  80   3                  detected_feed_full_start();
  81   3                  INT_PROC &= ~START_DUTY;
  82   3                  continue;
  83   3              }
  84   2              if(INT_PROC & SYSTEM_END_DUTY)
  85   2              {
  86   3                  printf("END\r\n");
  87   3                  fan_work_disable();
  88   3                  count_down_cancle_all_task();
  89   3                  valve_disable();
  90   3                  send_counter_for_feed_lack_to_dwscreen(counter_for_feed_lack);
  91   3                  // 正常关闭
  92   3                  if(!(alert_for_system & ALTER_FULL_FEED))
  93   3                  {
  94   4                      system_enter_idle();
  95   4                      printf("idle\r\n");
  96   4                      syc_signal_start_fan(0);
  97   4                  }
  98   3                  INT_PROC &= ~SYSTEM_END_DUTY;
  99   3                  continue;
 100   3              }
 101   2              // 5ms system tick-tock
 102   2              if (INT_PROC & TICK_DUTY) {
 103   3                  count_down_all_task();
 104   3                  if (UART_RX_Block(&COM2)) 
 105   3                      call_for_duty(COM2_RX_DUTY);
 106   3                  INT_PROC &= ~TICK_DUTY;
 107   3                  continue;
 108   3              }
 109   2      
 110   2              if (INT_PROC & COM2_RX_DUTY) {
 111   3                  // int len = dw_cache_response(RX2_Buffer);
 112   3                  // printf("COM2_RX_DUTY, PoW\r\n");
 113   3                  // UART_Finish_Rx(&COM2);
 114   3                  // dw_dispatch_response(dw_cached_response, len);
 115   3            int len = dw_cache_response(RX2_Buffer);
 116   3                  // printf("COM2_RX_DUTY, PoW\r\n");
C51 COMPILER V9.52.0.0   MAIN                                                              07/02/2016 11:26:42 PAGE 3   

 117   3                  UART_Finish_Rx(&COM2);
 118   3                  dw_dispatch_response(dw_cached_response, len);
 119   3            if (simple_workflow[COM2_ID].status == processing && simple_workflow[COM2_ID].callback != NULL) 
 120   3                  {
 121   4                      simple_workflow[COM2_ID].callback();
 122   4                      simple_workflow[COM2_ID].status = wait_for_finish;
 123   4                      call_for_duty(S_WF_DUTY);
 124   4                  }
 125   3                  INT_PROC &= ~COM2_RX_DUTY;
 126   3                  continue;
 127   3              }
 128   2              if (INT_PROC & WF_FLOW_DUTY) {
 129   3                  wf_flow_duty_task();
 130   3                  INT_PROC &= ~WF_FLOW_DUTY;
 131   3                  continue;
 132   3              }
 133   2      
 134   2              if (INT_PROC & S_WF_DUTY) {
 135   3                  s_wf_duty_task();
 136   3                  INT_PROC &= ~S_WF_DUTY;
 137   3                  continue;
 138   3              }
 139   2              if (INT_PROC & SECOND_DUTY) {
 140   3                  // dw_gen_task();
 141   3                  // wf_chk_timeout_duty_task();
 142   3                  // s_wf_chk_timeout_duty_task();
 143   3                  alert_for_temperature();
 144   3                  alert_for_overload();
 145   3                  alert_beep();
 146   3                  INT_PROC &= ~SECOND_DUTY;
 147   3                  continue;
 148   3              }
 149   2              if(INT_PROC & SPRAY_WASH_DUTY){
 150   3                  start_spray_wash();
 151   3                  INT_PROC &= ~SPRAY_WASH_DUTY;
 152   3                  continue;
 153   3              }
 154   2              if(INT_PROC & FEED_SUCTION_END_DUTY)
 155   2              {
 156   3                  // 料满时间到 吸料结束
 157   3                  count_down_cancel(&feed_suction);
 158   3                  count_down_cancel(&feed_intercept);
 159   3                  feed_suction_callback();
 160   3                  INT_PROC &=  ~FEED_SUCTION_END_DUTY;
 161   3                  continue;
 162   3              }
 163   2              if(INT_PROC & ALTER_FOR_FEED_FULL_DUTY)
 164   2              {
 165   3                  counter_for_feed_lack = 0;
 166   3                  alert_for_system &= ~ALTER_LACK_FEED;
 167   3                  alert_for_system |= ALTER_FULL_FEED;
 168   3                  system_enter_alter_feed_full();
 169   3                  INT_PROC &=  ~ALTER_FOR_FEED_FULL_DUTY;
 170   3                  continue;
 171   3              }
 172   2              if(INT_PROC & ALTER_FULL_FEED_CANCLE_DUTY)
 173   2              {
 174   3                  alert_for_system &= ~ALTER_FULL_FEED;
 175   3                  syc_signal_start_fan(0);
 176   3                  system_enter_idle();
 177   3                  INT_PROC &= ~ALTER_FULL_FEED_CANCLE_DUTY;
 178   3                  continue;
C51 COMPILER V9.52.0.0   MAIN                                                              07/02/2016 11:26:42 PAGE 4   

 179   3              }
 180   2              if(INT_PROC & ALTER_BEEP_DUTY)
 181   2              {
 182   3                  alert_beep_enable();
 183   3                  syc_signal_beep();
 184   3                  INT_PROC &= ~ALTER_BEEP_DUTY;
 185   3                  continue;
 186   3              }
 187   2              if(INT_PROC & ALTER_BEEP_CLOSE_DUTY)
 188   2              {
 189   3                  alert_beep_disable();
 190   3                  INT_PROC &= ~ALTER_BEEP_CLOSE_DUTY;
 191   3                  continue;
 192   3              }
 193   2              // if(INT_PROC & ALTER_FOR_FEED_LACK_DUTY)
 194   2              // {
 195   2              //     counter_for_feed_lack ++;
 196   2              //     if(counter_for_feed_lack >= counter_for_lack_alter_set)
 197   2              //         alert_for_system |= ALTER_LACK_FEED;
 198   2              //     else
 199   2              //         alert_for_system &= ~ALTER_LACK_FEED;
 200   2              //     send_counter_for_feed_lack_to_dwscreen(counter_for_feed_lack);
 201   2              //     INT_PROC &= ~ALTER_FOR_FEED_LACK_DUTY;
 202   2              //     continue; 
 203   2              // }
 204   2        }
 205   1      }
 206          
 207          
 208          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    595    ----
   CONSTANT SIZE    =     58    ----
   XDATA SIZE       =   ----       2
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
