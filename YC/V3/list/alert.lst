C51 COMPILER V9.52.0.0   ALERT                                                             07/02/2016 11:26:44 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE ALERT
OBJECT MODULE PLACED IN .\list\alert.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE alert.c LARGE OMF2 BROWSE DEBUG PRINT(.\list\alert.lst) TABS(2) OBJECT(.\li
                    -st\alert.obj)

line level    source

   1          #include "adc.h"
   2          #include "alert.h"
   3          #include "task.h"
   4          #include "dwscreen.h"
   5          #include "process.h"
   6          #include "workflow.h"
   7          
   8          u8 alert_for_system = 0;
   9          u8 record = 0;
  10          
  11          
  12          
  13          static void init_io_feed_lack()
  14          {
  15   1        //P23
  16   1        pure_input(2, 0x08);
  17   1      }
  18          
  19          
  20          void init_io_alert()
  21          {
  22   1        init_io_feed_lack();
  23   1        init_adc();
  24   1        // P24|23
  25   1        push_pull(2, 0x18);
  26   1      }
  27          
  28          void alert_for_overload()
  29          {
  30   1        //TODO
  31   1        if (!OVER_LOAD_IO)
  32   1          alert_for_system &= ~ALTER_OVER_LOAD;
  33   1          else
  34   1          alert_for_system |= ALTER_OVER_LOAD;
  35   1      }
  36          
  37          
  38          u8 tem_around_pre = 0;
  39          u8 tem_fan_pre = 0;
  40          
  41          void send_alter_to_screen(u8 value)
  42          {
  43   1        TX_write2buff(COM[COM2_ID], 0x5A);
  44   1        TX_write2buff(COM[COM2_ID], 0xA5);
  45   1        TX_write2buff(COM[COM2_ID], 0x05);
  46   1        TX_write2buff(COM[COM2_ID], 0x82);
  47   1        TX_write2buff(COM[COM2_ID], 0);
  48   1        TX_write2buff(COM[COM2_ID], 1);
  49   1        TX_write2buff(COM[COM2_ID], 0x00);
  50   1        TX_write2buff(COM[COM2_ID], value);
  51   1      }
  52          
  53          void alert_for_temperature()
  54          {
C51 COMPILER V9.52.0.0   ALERT                                                             07/02/2016 11:26:44 PAGE 2   

  55   1        tem_around = temperature_around_cal();
  56   1          tem_fan = temperature_fan_cal();
  57   1          if(tem_around_pre != tem_around || tem_fan_pre != tem_fan)
  58   1            send_two_value_to_screen(ADDR_TEMPERATURE_AROUND, tem_around, tem_fan);
  59   1        tem_around_pre = tem_around; 
  60   1          tem_fan_pre = tem_fan;
  61   1          if(tem_fan >= tem_stop){
  62   2            alert_for_system |= ALTER_TEM_STOP;
  63   2            alert_for_system |= ALTER_TEM_BEEP;
  64   2          } else if (tem_fan >= tem_alter && tem_fan < tem_stop){
  65   2            alert_for_system |= ALTER_TEM_BEEP;
  66   2            alert_for_system &= ~ALTER_TEM_STOP;
  67   2          } else {
  68   2            alert_for_system &= ~ALTER_TEM_STOP;
  69   2            alert_for_system &= ~ALTER_TEM_BEEP;
  70   2          }
  71   1      }
  72          
  73          
  74          void get_RTC_from_screen()
  75          {
  76   1        TX_write2buff(COM[COM2_ID], 0x5A);
  77   1        TX_write2buff(COM[COM2_ID], 0xA5);
  78   1        TX_write2buff(COM[COM2_ID], 0x03);
  79   1        TX_write2buff(COM[COM2_ID], 0x81);
  80   1        TX_write2buff(COM[COM2_ID], 0x20);
  81   1        TX_write2buff(COM[COM2_ID], 0x07);
  82   1      }
  83          
  84          
  85          // 报警解除标志
  86          u8 alert_for_system_pre = 0;
  87          void alert_beep()
  88          {
  89   1        u8 alter_change_signal = 0;
  90   1        // 减少串口工作量
  91   1        alter_change_signal = alert_for_system_pre  ^ alert_for_system;
  92   1        record = alter_change_signal & alert_for_system;
  93   1                
  94   1        // 报警值变化
  95   1        if(alter_change_signal)
  96   1        {
  97   2      
  98   2          if(alter_change_signal & 0x0E)
  99   2            send_alter_to_screen(alert_for_system);
 100   2          // 报警开始
 101   2          if(alert_for_system)
 102   2          {
 103   3            if(record)
 104   3            // 记录时间
 105   3              get_RTC_from_screen();
 106   3            if(alert_for_system & 0x15)
 107   3              INT_PROC |= SYSTEM_END_DUTY;
 108   3            if(alert_for_system & 0x1E)
 109   3              INT_PROC |= ALTER_BEEP_DUTY;
 110   3          }
 111   2          // 报警解除
 112   2          else
 113   2            INT_PROC |= ALTER_BEEP_CLOSE_DUTY;
 114   2        }
 115   1      
 116   1        alert_for_system_pre = alert_for_system;
C51 COMPILER V9.52.0.0   ALERT                                                             07/02/2016 11:26:44 PAGE 3   

 117   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    454    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      5       1
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
