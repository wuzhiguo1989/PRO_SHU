C51 COMPILER V9.52.0.0   ALERT                                                             11/08/2016 20:29:06 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE ALERT
OBJECT MODULE PLACED IN .\list\alert.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE alert.c LARGE OMF2 BROWSE DEBUG PRINT(.\list\alert.lst) TABS(2) OBJECT(.\li
                    -st\alert.obj)

line level    source

   1          #include "adc.h"
   2          #include "alert.h"
   3          #include "task.h"
   4          #include "dwscreen.h"
   5          #include "process.h"
   6          #include "workflow.h"
   7          
   8          u8 alert_for_system = 0;
   9          u8 record = 0;
  10          
  11          
  12          
  13          static void init_io_feed_lack()
  14          {
  15   1        //P23
  16   1        pure_input(2, 0x08);
  17   1        // P33
  18   1        pure_input(3, 0x08);
  19   1      }
  20          
  21          
  22          void init_io_alert()
  23          {
  24   1        init_io_feed_lack();
  25   1        init_adc();
  26   1        // P24|23
  27   1        push_pull(2, 0x18);
  28   1      }
  29          
  30          void alert_for_overload()
  31          {
  32   1        //TODO
  33   1        if (!OVER_LOAD_IO)
  34   1          alert_for_system &= ~ALTER_OVER_LOAD;
  35   1          else
  36   1          alert_for_system |= ALTER_OVER_LOAD;
  37   1      }
  38          
  39          
  40          u8 tem_around_pre = 0;
  41          u8 tem_fan_pre = 0;
  42          
  43          void send_alter_to_screen(u8 value)
  44          {
  45   1        TX_write2buff(COM[COM2_ID], 0x5A);
  46   1        TX_write2buff(COM[COM2_ID], 0xA5);
  47   1        TX_write2buff(COM[COM2_ID], 0x05);
  48   1        TX_write2buff(COM[COM2_ID], 0x82);
  49   1        TX_write2buff(COM[COM2_ID], 0);
  50   1        TX_write2buff(COM[COM2_ID], 1);
  51   1        TX_write2buff(COM[COM2_ID], 0x00);
  52   1        TX_write2buff(COM[COM2_ID], value);
  53   1      }
  54          
C51 COMPILER V9.52.0.0   ALERT                                                             11/08/2016 20:29:06 PAGE 2   

  55          void alert_for_temperature()
  56          {
  57   1        tem_around = temperature_around_cal();
  58   1          tem_fan = temperature_fan_cal();
  59   1          if(tem_around_pre != tem_around || tem_fan_pre != tem_fan)
  60   1            send_two_value_to_screen(ADDR_TEMPERATURE_AROUND, tem_around, tem_fan);
  61   1        tem_around_pre = tem_around; 
  62   1          tem_fan_pre = tem_fan;
  63   1          if(tem_fan >= tem_stop){
  64   2            alert_for_system |= ALTER_TEM_STOP;
  65   2            alert_for_system |= ALTER_TEM_BEEP;
  66   2          } else if (tem_fan >= tem_alter && tem_fan < tem_stop){
  67   2            alert_for_system |= ALTER_TEM_BEEP;
  68   2            alert_for_system &= ~ALTER_TEM_STOP;
  69   2          } else {
  70   2            alert_for_system &= ~ALTER_TEM_STOP;
  71   2            alert_for_system &= ~ALTER_TEM_BEEP;
  72   2          }
  73   1      }
  74          
  75          
  76          void get_RTC_from_screen()
  77          {
  78   1        TX_write2buff(COM[COM2_ID], 0x5A);
  79   1        TX_write2buff(COM[COM2_ID], 0xA5);
  80   1        TX_write2buff(COM[COM2_ID], 0x03);
  81   1        TX_write2buff(COM[COM2_ID], 0x81);
  82   1        TX_write2buff(COM[COM2_ID], 0x20);
  83   1        TX_write2buff(COM[COM2_ID], 0x07);
  84   1      }
  85          
  86          
  87          // 报警解除标志
  88          u8 alert_for_system_pre = 0;
  89          void alert_beep()
  90          {
  91   1        u8 alter_change_signal = 0;
  92   1        // 减少串口工作量
  93   1        alter_change_signal = alert_for_system_pre  ^ alert_for_system;
  94   1        record = alter_change_signal & alert_for_system;
  95   1                
  96   1        // 报警值变化
  97   1        if(alter_change_signal)
  98   1        {
  99   2      
 100   2          if(alter_change_signal & 0x0E)
 101   2            send_alter_to_screen(alert_for_system);
 102   2          // 报警开始
 103   2          if(alert_for_system)
 104   2          {
 105   3            if(record)
 106   3            // 记录时间
 107   3              get_RTC_from_screen();
 108   3            if(alert_for_system & 0x15)
 109   3              INT_PROC |= SYSTEM_END_DUTY;
 110   3            if(alert_for_system & 0x1E)
 111   3              INT_PROC |= ALTER_BEEP_DUTY;
 112   3          }
 113   2          // 报警解除
 114   2          else
 115   2            INT_PROC |= ALTER_BEEP_CLOSE_DUTY;
 116   2        }
C51 COMPILER V9.52.0.0   ALERT                                                             11/08/2016 20:29:06 PAGE 3   

 117   1      
 118   1        if(!(alert_for_system & 0x1E))
 119   1          INT_PROC |= ALTER_BEEP_CLOSE_DUTY;
 120   1      
 121   1        
 122   1        alert_for_system_pre = alert_for_system;
 123   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    476    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      5       1
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
