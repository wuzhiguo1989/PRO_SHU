C51 COMPILER V9.52.0.0   74HC595                                                           12/02/2016 16:34:32 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE 74HC595
OBJECT MODULE PLACED IN 74hc595.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE 74hc595.c DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          # include "74hc595.h"
   2          # include "share.h"
   3          # include "sync.h"
   4          # include "utils.h"
   5          # include "task.h"
   6          # include "key.h"
   7          # include "adc.h"
   8          
   9          #define NOT_DISPLAY  10
  10          
  11          #define TIME_ICON  0x14
  12          
  13          static code u8 const displaycode[13] = {0x3F, 0x06, 0x5B, 0x4F, 0x66, 0x6D, 0x7D, 0x07, 0x7F, 0x6F, 0x00, 
             -0x79, 0x71};
  14                             /*    0,    1,    2,    3,    4,    5,    6,    7,    8,    9,   NOT_DISPLAY, E, F */
  15          static code u8 const comcode[6] = {0x01, 0x02, 0x04, 0x08, 0x10, 0x20};
  16                          /*  1,    2,    3,    4,    5,    6    */
  17          static code u8 const power[6] = {0x00, 0x01, 0x03, 0x0B, 0x2B, 0x6B};
  18                        /*  1,    2,    3,    4,    5,    6    */
  19          // static code u8 const color[25] = {0x03, 0x0C, 0x30, 0x0F, 0x3C, 0x33, 0x3F, 0x35, 0x2D, 0x25, 0x07, 0x1
             -7, 0x13, 0x0F, 0x1F, 0x3F, 0x33, 0x37, 0x14, 0x34, 0x32, 0x0C, 0x1C, 0x1B, 0x30};
  20          static code u8 const color[7] = {0x03, 0x0C, 0x30, 0x0F, 0x3C, 0x33, 0x3F};
  21          
  22          u8 LED8[6] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
  23          
  24          u8 display_index = 0;
  25          
  26          
  27          void Led_io_init(void)
  28          {
  29   1        push_pull(1, 0x02);
  30   1        push_pull(1, 0x01);
  31   1        push_pull(2, 0x80);
  32   1        push_pull(2, 0x40);
  33   1        push_pull(2, 0x20);
  34   1        push_pull(2, 0x10);
  35   1        push_pull(2, 0x04);
  36   1        push_pull(2, 0x02);
  37   1        push_pull(2, 0x01);
  38   1        push_pull(3, 0x80);
  39   1        push_pull(3, 0x40);
  40   1        push_pull(3, 0x20);
  41   1        push_pull(3, 0x10); 
  42   1      }
  43          
  44          
  45          void Delay3000ms()    //@24.000MHz
  46          {
  47   1        unsigned char i, j, k;
  48   1      
  49   1        _nop_();
  50   1        _nop_();
  51   1        i = 125;
  52   1        j = 250;
  53   1        k = 250;
C51 COMPILER V9.52.0.0   74HC595                                                           12/02/2016 16:34:32 PAGE 2   

  54   1        do
  55   1        {
  56   2          do
  57   2          {
  58   3            while (--k);
  59   3          } while (--j);
  60   2        } while (--i);
  61   1      }
  62          
  63          static void display_seg(u8 i, u8 number)
  64          {
  65   1        if(i == 0){
  66   2          DISPLAY_D(0) = number;
  67   2        }else if(i == 1){
  68   2          DISPLAY_D(1) = number;
  69   2        }else if(i == 2){
  70   2          DISPLAY_D(2) = number;
  71   2        }else if(i == 3){
  72   2          DISPLAY_D(3) = number;
  73   2        }else if(i == 4){
  74   2          DISPLAY_D(4) = number;
  75   2        }else if(i == 5){
  76   2          DISPLAY_D(5) = number;
  77   2        }else if(i == 6){
  78   2          DISPLAY_D(6) = number;
  79   2        }
  80   1      }
  81          
  82          
  83          void display_number(u8 dat)
  84          {       
  85   1          u8  i;
  86   1          for(i = 0; i < 7; i++)
  87   1          {
  88   2              if(dat & 0x01)
  89   2                display_seg(i, 1);
  90   2              else
  91   2                display_seg(i, 0);
  92   2              dat >>= 1;
  93   2          }
  94   1      }
  95          
  96          static void display_com(u8 i, u8 number)
  97          {
  98   1        if(i == 0){
  99   2          DISPLAY_C(0) = number;
 100   2        }else if(i == 1){
 101   2          DISPLAY_C(1) = number;
 102   2        }else if(i == 2){
 103   2          DISPLAY_C(2) = number;
 104   2        }else if(i == 3){
 105   2          DISPLAY_C(3) = number;
 106   2        }else if(i == 4){
 107   2          DISPLAY_C(4) = number;
 108   2        }else if(i == 5){
 109   2          DISPLAY_C(5) = number;
 110   2        }
 111   1      }
 112          
 113          void display_com_number(u8 dat)
 114          {       
 115   1          u8  i;
C51 COMPILER V9.52.0.0   74HC595                                                           12/02/2016 16:34:32 PAGE 3   

 116   1          for(i = 0; i < 6; i++)
 117   1          {
 118   2              if(dat & 0x01)
 119   2                display_com(i, 1);
 120   2              else
 121   2                display_com(i, 0);
 122   2              dat >>= 1;
 123   2          }
 124   1      }
 125          
 126          
 127          
 128          
 129          void Display_digit_on_screen(void)
 130          {
 131   1          if(!CHG)
 132   1          {
 133   2            u8 x;
 134   2            // 分钟
 135   2            LED8[0] = 10;
 136   2            LED8[1] = 10;
 137   2            // 秒
 138   2            LED8[3] = 10;
 139   2            LED8[4] = 10;
 140   2            // power_level = 3;
 141   2            // 电源指示灯 + 时间
 142   2            x = power_level + icon_power;
 143   2            if(x > 5)
 144   2            {
 145   3              icon_power = 0;
 146   3              LED8[2] = power_level;
 147   3            }
 148   2            else
 149   2            LED8[2] = x;
 150   2          // LED8[2] = power_level;
 151   2            // LED8[5] = color_level;
 152   2            LED8[5] = color_level;
 153   2            countdown_signal_start = NO;
 154   2          }
 155   1        else
 156   1        {
 157   2            if(!local_time.minute && !local_time.second)
 158   2            {
 159   3              LED8[0] = 10;
 160   3              LED8[1] = 0;
 161   3              LED8[0] = 12;
 162   3              LED8[1] = 12;
 163   3            }
 164   2            else
 165   2            {
 166   3              // 分钟
 167   3              LED8[0] = local_time.minute / 10;
 168   3              LED8[1] = local_time.minute % 10;
 169   3              // 秒
 170   3              LED8[3] = local_time.second / 10;
 171   3              LED8[4] = local_time.second % 10;
 172   3            }
 173   2      
 174   2            // u16 x = Cnt_exit_display();
 175   2            // LED8[0] = x / 1000;
 176   2            // LED8[1] = x / 100 % 10;
 177   2            // //秒
C51 COMPILER V9.52.0.0   74HC595                                                           12/02/2016 16:34:32 PAGE 4   

 178   2            // LED8[3] = x / 10 % 10;
 179   2            // LED8[4] = x % 10;
 180   2            if(power_display_level <= power_level)
 181   2              power_level = power_display_level;
 182   2            else
 183   2            {
 184   3              if(power_display_level - power_level == 1)
 185   3                power_display_level = power_level;
 186   3            }
 187   2          LED8[2] = power_level;
 188   2            LED8[5] = color_level;
 189   2          }
 190   1      } 
 191          
 192          void DisplayScanInit(void)
 193          {   
 194   1        display_com_number(~0x3F);
 195   1        display_number(0x7F);
 196   1          Delay3000ms();
 197   1      }
 198          
 199          void Displayclean(void)
 200          {
 201   1        P22 = 0;
 202   1        P21 = 0;
 203   1        P20 = 0;
 204   1        P37 = 0;
 205   1        P36 = 0;
 206   1        P35 = 0;
 207   1        P34 = 0;
 208   1        P11 = 0;
 209   1        P10 = 0;
 210   1        P27 = 0;
 211   1        P26 = 0;
 212   1        P25 = 0;
 213   1        P24 = 0;
 214   1      }
 215          
 216          void DisplayScan(void)
 217          {   
 218   1      //  先消隐 
 219   1        display_number(0x00);
 220   1          display_com_number(~comcode[display_index]); 
 221   1      // 显示数据
 222   1          if(display_index == 0 || display_index == 1 || display_index == 3 || display_index == 4)
 223   1          {
 224   2            display_number(displaycode[LED8[display_index]]);     //输出段码
 225   2          }  else if(display_index == 2) {
 226   2            if(!time_colon_icon || !CHG)
 227   2              display_number(power[LED8[display_index]]);
 228   2            else 
 229   2              display_number(TIME_ICON | power[LED8[display_index]]);     
 230   2        } else {
 231   2          if(!CHG || !countdown_signal_start)
 232   2            display_number(0x00);
 233   2          else
 234   2            display_number(color[LED8[display_index]]);
 235   2        }
 236   1      
 237   1        display_com_number(~comcode[display_index]);          //输出位码
 238   1          if(++display_index >= 6)
 239   1            display_index = 0;  //8位结束回0
C51 COMPILER V9.52.0.0   74HC595                                                           12/02/2016 16:34:32 PAGE 5   

 240   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    560    ----
   CONSTANT SIZE    =     32    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      7       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
