C51 COMPILER V9.52.0.0   USART                                                             07/29/2016 19:55:34 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE USART
OBJECT MODULE PLACED IN usart.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE usart.c DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          #include "usart.h"
   2          #include "task.h"
   3          #include <string.h>
   4          #include <ctype.h>
   5          
   6          COMx_context xdata COM1, COM3, COM4;
   7          COMx_context xdata *COM[MAX_UART_SUPPORT];
   8          
   9          char xdata TX1_Buffer[COM_TX1_Length];  
  10          char xdata RX1_Buffer[COM_RX1_Length];   
  11          
  12          static char TX1_write2buff(char dat);
  13          
  14          static void context_init(COMx_context xdata *c) {
  15   1          c->TX_read = 0;
  16   1          c->TX_write = 0;
  17   1          c->B_TX_busy = 0;
  18   1          c->RX_Cnt = 0;
  19   1          c->RX_TimeOut = 0;
  20   1          c->B_RX_OK = 0;
  21   1      }
  22          
  23          static bool share_timer2_init_once_token = FALSE;
  24          static void uart_share_timer2() {
  25   1          if (!share_timer2_init_once_token) {
  26   2              Timer2_Stop();              //Timer stop
  27   2              Timer2_AsTimer();           //Timer2 set As Timer
  28   2              Timer2_1T() ;               //Timer2 set as 1T mode
  29   2              T2_Load(65536ul - (24000000 / 4) / 115200ul);
  30   2              Timer2_InterruptDisable();  //禁止中断    
  31   2              Timer2_Run();               //Timer run enable
  32   2              share_timer2_init_once_token = TRUE;
  33   2          }
  34   1      }
  35          
  36          
  37          void uart_init() {
  38   1      
  39   1          // COM1
  40   1          uart_share_timer2();
  41   1          S1_8bit();
  42   1          S1_BRT_UseTimer2();
  43   1          S1_USE_P30P31();
  44   1          
  45   1          S1_Int_Enable();
  46   1          S1_RX_Enable();
  47   1          COM1.id = COM1_ID;
  48   1          memset(TX1_Buffer, 0, COM_TX1_Length);
  49   1          memset(RX1_Buffer, 0, COM_RX1_Length);
  50   1          context_init(&COM1);
  51   1          COM[COM1_ID] = &COM1;
  52   1      
  53   1      }
  54          
  55          
C51 COMPILER V9.52.0.0   USART                                                             07/29/2016 19:55:34 PAGE 2   

  56          
  57          
  58          char TX_write2buff(COMx_context xdata *context, char c) {
  59   1          if(context->id == COM1_ID)  return TX1_write2buff(c);
  60   1          
  61   1          return c;
  62   1      }
  63          
  64          
  65          static char TX1_write2buff(char c)  
  66          {
  67   1          TX1_Buffer[COM1.TX_write] = c;  
  68   1          if(++COM1.TX_write >= COM_TX1_Length)   
  69   1              COM1.TX_write = 0;
  70   1      
  71   1          if(COM1.B_TX_busy == 0)     
  72   1          {  
  73   2              COM1.B_TX_busy = 1;     
  74   2              SET_TI1();                  
  75   2          }
  76   1          return c;
  77   1      }
  78          
  79          
  80          void UART1_int (void) interrupt UART1_VECTOR using 2
  81          {
  82   1          if(RI)
  83   1          {
  84   2              CLR_RI1();
  85   2              if(COM1.B_RX_OK == 0)
  86   2              {
  87   3                  if(COM1.RX_Cnt >= COM_RX1_Length)   COM1.RX_Cnt = 0;
  88   3                  RX1_Buffer[COM1.RX_Cnt++] = SBUF;
  89   3                  COM1.RX_TimeOut = TimeOutSet1;
  90   3              }
  91   2          }
  92   1      
  93   1          if(TI)
  94   1          {
  95   2              CLR_TI1();
  96   2              if(COM1.TX_read != COM1.TX_write)
  97   2              {
  98   3                  SBUF = TX1_Buffer[COM1.TX_read];
  99   3                  if(++COM1.TX_read >= COM_TX1_Length)        COM1.TX_read = 0;
 100   3              }
 101   2              else    COM1.B_TX_busy = 0;
 102   2          }
 103   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    323    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     85    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      8       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
