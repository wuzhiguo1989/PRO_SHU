C51 COMPILER V9.52.0.0   SYNC                                                              02/29/2016 20:28:49 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE SYNC
OBJECT MODULE PLACED IN sync.OBJ
COMPILER INVOKED BY: D:\Keil\C51\BIN\C51.EXE sync.c LARGE OMF2 BROWSE DEBUG TABS(2)

line level    source

   1          #include "sync.h"
   2          #include "task.h"
   3          #include "share.h"
   4          #include "alarm.h"
   5          #include "config.h"
   6          #include "utils.h"
   7          #include "ble.h"
   8          
   9          #define T200Hz  (MAIN_Fosc / 12 / 200)
  10          #define Timer0_Reload   (65536UL - T200Hz)  
  11          
  12          static u8 candidate_reset_signal_recieving = NO;
  13          static u8 counter_for_second = 200;
  14          static u8 counter_for_reset = 90;
  15          static u8 counter_for_second_time_out = COUNTER_PER_SECOND;
  16          static u8 counter_for_second_driver = 60;
  17          static u8 counter_for_timeout = TIME_OUT_TASK_INTERVAL;
  18          static u8 counter_for_driver = DRIVER_TASK_INTERVAL;
  19          static u8 key_task_interval = KEY_SCAN_TASK_INTERVAL;
  20          static u8 vac_alarm_counter = 100;
  21          static u16 bat_alarm_counter = 600;
  22          static u8 counter_for_alarm_bat = 0;
  23          
  24          void reset_all_counters() {
  25   1          reset_counter_for_second_time_out();
  26   1          reset_counter_for_second_driver();
  27   1          reset_counter_for_timeout();
  28   1          reset_counter_for_driver();
  29   1      }
  30          
  31          void reset_counter_for_ble() {
  32   1          counter_for_second = 200; 
  33   1          counter_for_reset = 90;
  34   1      }
  35          
  36          
  37          void init_system_tick() {
  38   1          Timer0_12T();
  39   1          Timer0_AsTimer();
  40   1          Timer0_16bitAutoReload();
  41   1          T0_Load(0xD8F0);
  42   1          Timer0_InterruptEnable();
  43   1          Timer0_Run();
  44   1      }
  45          
  46          void sync_with_alert() // 2ms @24.000MHz
  47          {
  48   1          unsigned char i, j;
  49   1          i = 47;
  50   1          j = 174;
  51   1          do
  52   1          {
  53   2              while (--j);
  54   2          } while (--i);
  55   1      }
C51 COMPILER V9.52.0.0   SYNC                                                              02/29/2016 20:28:49 PAGE 2   

  56          
  57          // 
  58          void tm0_isr() interrupt TIMER0_VECTOR  using 1
  59          {    
  60   1          if(!candidate_reset_signal_recieving)
  61   1          {
  62   2              MCU_CS = 1;
  63   2              if(!--counter_for_second)
  64   2              {
  65   3                  counter_for_second = 200;
  66   3                  if(!--counter_for_reset)
  67   3                  {
  68   4                      counter_for_reset = 90;
  69   4                      candidate_reset_signal_recieving = YES;
  70   4                      init_uart(); // 清除串口数据
  71   4                      MCU_CS = 0; 
  72   4                  }
  73   3              }
  74   2          }
  75   1          else
  76   1              candidate_reset_signal_recieving = NO;
  77   1      
  78   1      
  79   1      
  80   1      
  81   1          if (candidate_time_out_signal_recieving)
  82   1          {
  83   2              --counter_for_second_time_out;
  84   2              if (!counter_for_second_time_out)
  85   2              {
  86   3                  reset_counter_for_second_time_out();
  87   3                  --counter_for_timeout;
  88   3                  if(!counter_for_timeout)
  89   3                  {
  90   4                      INT_PROC |= TIME_OUT_DUTY;
  91   4                      reset_counter_for_timeout();
  92   4                  }
  93   3              }
  94   2          }
  95   1      
  96   1          if(candidate_driver_signal_recieving)
  97   1          {
  98   2              --counter_for_second_driver;
  99   2              if(!counter_for_second_driver)
 100   2              {
 101   3                  reset_counter_for_second_driver();
 102   3                  INT_PROC |= DRIVER_DUTY; 
 103   3              }
 104   2          }
 105   1      
 106   1          if (!--key_task_interval) {
 107   2              INT_PROC |= KEY_DUTY;
 108   2              key_task_interval = KEY_SCAN_TASK_INTERVAL;
 109   2          }
 110   1      
 111   1      
 112   1      
 113   1          if(performance_status == 0x80)
 114   1          {
 115   2              if(!-- vac_alarm_counter)
 116   2              {
 117   3                  ALARM = ~ALARM;
C51 COMPILER V9.52.0.0   SYNC                                                              02/29/2016 20:28:49 PAGE 3   

 118   3                  vac_alarm_counter = 100;
 119   3              }
 120   2          }
 121   1      
 122   1          if(performance_status == 0x40)
 123   1          {
 124   2              if(!-- bat_alarm_counter)
 125   2              {
 126   3                  counter_for_alarm_bat ++;
 127   3                  if(counter_for_alarm_bat == 4)
 128   3                  {
 129   4                      ALARM = 0;
 130   4                      counter_for_alarm_bat = 0;
 131   4                      bat_alarm_counter = 400;
 132   4                  }
 133   3                  else
 134   3                  {
 135   4                      ALARM = ~ALARM;
 136   4                      bat_alarm_counter = 100;
 137   4                  }
 138   3                  
 139   3              }
 140   2          }
 141   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    298    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     12    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
