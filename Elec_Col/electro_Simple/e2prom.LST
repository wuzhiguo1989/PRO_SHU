C51 COMPILER V9.52.0.0   E2PROM                                                            12/27/2016 13:09:29 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE E2PROM
OBJECT MODULE PLACED IN e2prom.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE e2prom.c DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          #include "e2prom.h"
   2          #include "intrins.h"
   3          static void DisableEEPROM(void)
   4          {
   5   1          IAP_CONTR = 0;          //禁止ISP/IAP操作
   6   1          IAP_CMD   = 0;          //去除ISP/IAP命令
   7   1          IAP_TRIG  = 0;          //防止ISP/IAP命令误触发
   8   1          IAP_ADDRH = 0xff;       //清0地址高字节
   9   1          IAP_ADDRL = 0xff;       //清0地址低字节，指向非EEPROM区，防止误操作
  10   1      }
  11          static u8 EEPROM_read(u16 EE_address)
  12          {
  13   1          u8 dat;
  14   1          IAP_CONTR = ENABLE_IAP;
  15   1          IAP_CMD = CMD_READ;
  16   1          IAP_ADDRL = EE_address;
  17   1          IAP_ADDRH = EE_address >> 8;
  18   1          IAP_TRIG = 0x5a;
  19   1          IAP_TRIG = 0xa5;
  20   1          _nop_();
  21   1          dat = IAP_DATA;
  22   1          DisableEEPROM();
  23   1          return dat;
  24   1      }
  25          
  26          static void EEPROM_SectorErase(u16 EE_address)
  27          {
  28   1          IAP_CONTR = ENABLE_IAP;  //设置等待时间，允许ISP/IAP操作，送一次就够
  29   1          IAP_CMD = CMD_ERASE;     //送字节写命令，命令不需改变时，不需重新送命令
  30   1          IAP_ADDRL = EE_address;
  31   1          IAP_ADDRH = EE_address >> 8;
  32   1          IAP_TRIG = 0x5a;
  33   1          IAP_TRIG = 0xa5;
  34   1          _nop_();
  35   1          DisableEEPROM();
  36   1      }
  37          
  38          static void EEPROM_write(u16 EE_address,u8 dat)
  39          {
  40   1      
  41   1          IAP_CONTR = ENABLE_IAP;  //设置等待时间，允许ISP/IAP操作，送一次就够
  42   1          IAP_CMD = CMD_PROGRAM;   //送字节写命令，命令不需改变时，不需重新送命令
  43   1          IAP_ADDRL = EE_address;
  44   1          IAP_ADDRH = EE_address >> 8;
  45   1        IAP_DATA = dat;
  46   1          IAP_TRIG = 0x5a;
  47   1          IAP_TRIG = 0xa5;
  48   1          _nop_();
  49   1          DisableEEPROM();
  50   1      }
  51          
  52          u16 Read_mileage()
  53          {
  54   1        u16 i;  
  55   1        for(i = 0; i < 512; i++)
C51 COMPILER V9.52.0.0   E2PROM                                                            12/27/2016 13:09:29 PAGE 2   

  56   1          {
  57   2              if(EEPROM_read(ADDRESS_FOR_MILEAGE + i) != 0x00)
  58   2                  return i;
  59   2          }
  60   1          return 512;
  61   1      }
  62          
  63          u32 Read_mileage_total()
  64          {
  65   1        u8 i;  
  66   1        u32 counter = 0;
  67   1          for(i = 0; i < 4; i++)
  68   1              counter = counter << 8 | EEPROM_read(ADDRESS_FOR_MILEAGE_TOTAL + i);
  69   1          if(counter == 0xFFFFFFFF)
  70   1              counter = 0;
  71   1          return counter;
  72   1      }
  73          
  74          void Store_mileage(u16 counter)
  75          {
  76   1          EEPROM_write(ADDRESS_FOR_MILEAGE + counter, 0x00);
  77   1      }
  78          
  79          
  80          void Store_mileage_total(u32 counter)
  81          {
  82   1          u8 i;
  83   1          EEPROM_SectorErase(ADDRESS_FOR_MILEAGE);
  84   1          EEPROM_SectorErase(ADDRESS_FOR_MILEAGE_TOTAL);
  85   1          for(i = 0; i < 4; i++)
  86   1              EEPROM_write(ADDRESS_FOR_MILEAGE_TOTAL + i, counter >> (8 * (3 - i)));
  87   1      }
  88          
  89          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    303    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       9
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
