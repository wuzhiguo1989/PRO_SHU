C51 COMPILER V9.52.0.0   COM_1                                                             09/07/2015 15:57:19 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE COM_1
OBJECT MODULE PLACED IN com_1.OBJ
COMPILER INVOKED BY: F:\Keil\C51\BIN\C51.EXE com_1.c COMPACT OMF2 OPTIMIZE(9,SPEED) BROWSE DEBUG TABS(2)

line level    source

   1          /*  
   2          * STC-ISP导入芯片信息至Keil
   3          * 采用STC15W404AS系列
   4          * 假定测试芯片的工作频率为18.432MHz
   5          */
   6          #include "intrins.h"
   7          #include "led.h"
   8          #include "uart.h"
   9          #include "sync.h"
  10          #include "adc.h"
  11          #include "display.h"
  12          #include "shared.h"
  13          #include "lm567.h"
  14          #include "nRF24L01.h"
  15          
  16          #define disable_all_interrupt() EA = 0
  17          #define enable_all_interrupt() EA = 1
  18          
  19          static void init_system_component();
  20          static void init_logic_params();
  21          static void init_adc_amplifier();
  22          static void adc_sampling_rest();
  23          
  24          #define IO_ADC    0x02  // P1.1
  25          #define IO_LED1     0x20  // P5.5
  26          #define IO_LED2   0x10  // P5.4
  27          #define IO_LED3     0x01  // P1.0
  28          #define IO_INT    0x04  // P3.2
  29          //#define IO_CODE   0x08  // P3.3
  30          
  31          void Delay100ms()   //@18.432MHz
  32          {
  33   1        unsigned char i, j, k;
  34   1      
  35   1        _nop_();
  36   1        _nop_();
  37   1        i = 8;
  38   1        j = 1;
  39   1        k = 243;
  40   1        do
  41   1        {
  42   2          do
  43   2          {
  44   3            while (--k);
  45   3          } while (--j);
  46   2        } while (--i);
  47   1      }
  48          
  49          
  50          void require_delay_init() {
  51   1        //set_push_pull_output_on1(IO_LED3);
  52   1        set_push_pull_output_on5(IO_LED1);
  53   1        set_push_pull_output_on5(IO_LED2);
  54   1        //set_push_pull_output_on1(IO_AMP);
  55   1      //  set_quasi_bidirectional_on1(IO_AMP);
C51 COMPILER V9.52.0.0   COM_1                                                             09/07/2015 15:57:19 PAGE 2   

  56   1      //  set_input_only_on1(IO_ADC);
  57   1        set_input_only_on3(IO_INT);
  58   1      //  set_input_only_on3(IO_CODE);
  59   1      
  60   1      //  init_adc_amplifier();
  61   1      //  init_adc();
  62   1      }
  63          void BLE_searched_init()
  64          {
  65   1        MCU_CS = 1;
  66   1        sync_with_alert();
  67   1        MCU_CS = 0;
  68   1        sync_with_alert();
  69   1        MCU_CS = 1;
  70   1      }
  71          
  72          void BLE_modify_name()
  73          {
  74   1        BT_RTS = 0;
  75   1        sync_with_alert();
  76   1        modify_name();
  77   1        Delay100ms();
  78   1        BT_RTS = 1;
  79   1      }
  80          
  81          void instant_effective_init() {
  82   1        init_system_component();
  83   1        init_logic_params();
  84   1      }
  85          
  86          void main()
  87          {
  88   1        // stop catching interrupt
  89   1        disable_all_interrupt();
  90   1        // 
  91   1        require_delay_init();
  92   1      
  93   1        instant_effective_init();
  94   1        
  95   1        // BLE_modify_name();
  96   1      
  97   1        // -> sync.h
  98   1        BLE_searched_init();
  99   1        
 100   1        // // begin catching interrupt
 101   1        enable_all_interrupt();
 102   1        // run forever
 103   1        NRF24L01_Init();
 104   1        NRF24L01_TX_Mode(); 
 105   1      
 106   1          while(1) {
 107   2          //  BLE_modify_name();
 108   2            // Feed dog
 109   2            reset_watch_dog();
 110   2              if (INT_PROC & UART_PROC) {
 111   3              parse_crtl_signal_from_BLE();
 112   3              INT_PROC &= ~UART_PROC;
 113   3              continue;
 114   3            }
 115   2            // io status sampling finished
 116   2            if (INT_PROC & LM567_DUTY) {
 117   3              signal_t signal_raw;
C51 COMPILER V9.52.0.0   COM_1                                                             09/07/2015 15:57:19 PAGE 3   

 118   3              u8 signal_raw_search_index = 0, signal_raw_fall_counter = 2;
 119   3              if(quick_validate_signal(signal_raw_data)) {
 120   4                while (signal_raw_search_index < 7) {
 121   5                  if ((signal_raw_data & (0x03 << signal_raw_search_index)) == (0x02 << signal_raw_search_index))
 122   5                  {
 123   6                    ++signal_raw_search_index;
 124   6                    ++signal_raw_fall_counter;
 125   6                  }
 126   5                  ++signal_raw_search_index;
 127   5                }
 128   4      
 129   4                if (fall_counter_whole < signal_raw_fall_counter) {
 130   5                  signal_raw = effective_signal(signal_raw_data);
 131   5                parse_crtl_signal(signal_raw);
 132   5                }
 133   4            }
 134   3            INT_PROC &= ~LM567_DUTY;
 135   3            EX1 = ENABLE;
 136   3              continue;
 137   3            }
 138   2            // 60hz * 2
 139   2            if (INT_PROC & EXINT_PROC) {
 140   3       //       if (cycle_output && toggle_status) 
 141   3              if (toggle_status) 
 142   3                toggle_once();  // -> display.h
 143   3              else 
 144   3              {
 145   4                Tx2Buf0[0] = Tx2Buf0[1] = 0;
 146   4                Tx2Buf1[0] = Tx2Buf1[1] = 0;
 147   4                Tx2Buf2[0] = Tx2Buf2[1] = 0;
 148   4                INT_CLKO &= 0xEF; // 关闭发送中断
 149   4                NRF24L01_TX_Mode();
 150   4                NRF24L01_TxPacket_NUM(Tx2Buf0,0);
 151   4                NRF24L01_TxPacket_NUM(Tx2Buf1,1);
 152   4                NRF24L01_TxPacket_NUM(Tx2Buf2,2);
 153   4                NRF24L01_RX_Mode(4);
 154   4                INT_CLKO |= 0x10;
 155   4              }
 156   3              prepare_next_display_params();
 157   3              INT_PROC &= ~EXINT_PROC;
 158   3              continue;
 159   3            }
 160   2         //   // 5ms system tick-tock
 161   2            if (INT_PROC & TICK_DUTY) {
 162   3              cycle_based_adjust(counter_for_cycle);
 163   3                  INT_PROC &= ~TICK_DUTY;
 164   3              continue;
 165   3            }
 166   2            if (INT_PROC & RECIEVE_DUTY) {
 167   3              if(!NRF24L01_RxPacket(Rx2Buf))
 168   3              {
 169   4                signal_t signal_data = Rx2Buf[0];
 170   4                parse_crtl_signal(signal_data);
 171   4              }
 172   3              INT_CLKO |= 0x10;             
 173   3              INT_PROC &= ~RECIEVE_DUTY;
 174   3              continue;
 175   3            }
 176   2            if (INT_PROC & MINUTE_DUTY) {
 177   3              // -> display.h
 178   3            skip_to_next_display_if_should();
 179   3            INT_PROC &= ~MINUTE_DUTY;
C51 COMPILER V9.52.0.0   COM_1                                                             09/07/2015 15:57:19 PAGE 4   

 180   3            continue;
 181   3            }
 182   2            if (adc_should_sampling) {
 183   3              adc_sampling();
 184   3            }
 185   2          }
 186   1      }
 187          
 188          static void
 189          init_adc_amplifier() {
 190   1        high(P14);
 191   1      }
 192          
 193          static void
 194          init_system_component() {
 195   1        init_uart();
 196   1        init_sync_timer();
 197   1        init_ac_driver();
 198   1        init_phase_sync_timer();
 199   1        init_signal_decoder();
 200   1      }
 201          
 202          static void
 203          init_logic_params() {
 204   1        display_startup_init();
 205   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    454    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----       3
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
